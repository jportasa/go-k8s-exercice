name: ci

on:
  pull_request:
    branches:
      - 'master'
  push:
    tags:
      - 'v*'

jobs:
  ci:
    runs-on: 'ubuntu-latest'
    steps:  
      -
        name: Checkout
        uses: actions/checkout@v2      
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV          
      - 
        name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV
      -
        name: Build 
        run: |
          echo ${{ github.head_ref }}
          docker build -t jportacloud/mattermost:${{ env.BRANCH_NAME }} .
      -
        name: Push to Dockerhub
        run: |
          docker push jportacloud/mattermost:${{ env.BRANCH_NAME }}    
      - 
        name: Release
        uses: nida/go-release-action@v2.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: linux
          goarch: amd64   
          goversion: 1.17       
          project_path: './src'
          binary_name: 'mattermost'
      -
        name: Release push
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            *           